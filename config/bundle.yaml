# Namespace
---
apiVersion: v1
kind: Namespace
metadata:
  name: caddy-system
---
# Source: crds/config.caddy.io_caddyfiletemplates.yaml

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: caddyfiletemplates.config.caddy.io
  namespace: caddy-system
spec:
  group: config.caddy.io
  names:
    kind: CaddyfileTemplate
    listKind: CaddyfileTemplateList
    plural: caddyfiletemplates
    shortNames:
    - caddyfile
    singular: caddyfiletemplate
  scope: Cluster
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: CaddyfileTemplate is the Schema for the caddyfiletemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          data:
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: caddy-injector/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: caddy-injector
  namespace: caddy-system
  labels:
    helm.sh/chart: caddy-injector-0.1.0
    app.kubernetes.io/name: caddy-injector
    app.kubernetes.io/instance: caddy-injector
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: caddy-injector/templates/manager_clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: caddy-injector-manager
  namespace: caddy-system
  labels:
    helm.sh/chart: caddy-injector-0.1.0
    app.kubernetes.io/name: caddy-injector
    app.kubernetes.io/instance: caddy-injector
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - config.caddy.io
  resources:
  - caddyfiletemplates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - config.caddy.io
  resources:
  - caddyfiletemplates/status
  verbs:
  - get
- apiGroups:
  - cert-manager.io
  resources:
  - certificates
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
---
# Source: caddy-injector/templates/manager_clusterrole_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: caddy-injector-manager
  namespace: caddy-system
  labels:
    helm.sh/chart: caddy-injector-0.1.0
    app.kubernetes.io/name: caddy-injector
    app.kubernetes.io/instance: caddy-injector
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: caddy-injector-manager
subjects:
- kind: ServiceAccount
  name: caddy-injector
  namespace: caddy-system
---
# Source: caddy-injector/templates/leader_election_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: caddy-injector-leader-election
  namespace: caddy-system
  labels:
    helm.sh/chart: caddy-injector-0.1.0
    app.kubernetes.io/name: caddy-injector
    app.kubernetes.io/instance: caddy-injector
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: caddy-injector/templates/leader_election_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: caddy-injector-leader-election
  namespace: caddy-system
  labels:
    helm.sh/chart: caddy-injector-0.1.0
    app.kubernetes.io/name: caddy-injector
    app.kubernetes.io/instance: caddy-injector
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: caddy-injector-leader-election
subjects:
- kind: ServiceAccount
  name: caddy-injector
  namespace: caddy-system
---
# Source: caddy-injector/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: caddy-injector
  namespace: caddy-system
  labels:
    helm.sh/chart: caddy-injector-0.1.0
    app.kubernetes.io/name: caddy-injector
    app.kubernetes.io/instance: caddy-injector
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: caddy-injector
    app.kubernetes.io/instance: caddy-injector
---
# Source: caddy-injector/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: caddy-injector
  namespace: caddy-system
  labels:
    helm.sh/chart: caddy-injector-0.1.0
    app.kubernetes.io/name: caddy-injector
    app.kubernetes.io/instance: caddy-injector
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: caddy-injector
      app.kubernetes.io/instance: caddy-injector
  template:
    metadata:
      labels:
        app.kubernetes.io/name: caddy-injector
        app.kubernetes.io/instance: caddy-injector
    spec:
      serviceAccountName: caddy-injector
      securityContext:
        fsGroup: 65532
      volumes:
        - name: tls
          secret:
            secretName: caddy-injector-tls
      containers:
        - name: caddy-injector
          image: "ghcr.io/tinyzimmer/caddy-injector:latest"
          imagePullPolicy: IfNotPresent
          args:
           - --leader-elect
          ports:
            - name: http
              containerPort: 9443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: tls
              mountPath: /tmp/k8s-webhook-server/serving-certs
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          resources:
            {}
---
# Source: caddy-injector/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: caddy-injector-tls
  namespace: caddy-system
  labels:
    helm.sh/chart: caddy-injector-0.1.0
    app.kubernetes.io/name: caddy-injector
    app.kubernetes.io/instance: caddy-injector
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  secretName: caddy-injector-tls
  dnsNames:
  - caddy-injector
  - caddy-injector.caddy-system
  - caddy-injector.caddy-system.svc
  - caddy-injector.caddy-system.svc.cluster.local
  issuerRef:
    name: caddy-injector-selfsigner
---
# Source: caddy-injector/templates/certificate.yaml
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: caddy-injector-selfsigner
  namespace: caddy-system
  labels:
    helm.sh/chart: caddy-injector-0.1.0
    app.kubernetes.io/name: caddy-injector
    app.kubernetes.io/instance: caddy-injector
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  selfSigned: {}
---
# Source: caddy-injector/templates/mutating_webhook.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: caddy-injector-pod-webhook
  namespace: caddy-system
  labels:
    helm.sh/chart: caddy-injector-0.1.0
    app.kubernetes.io/name: caddy-injector
    app.kubernetes.io/instance: caddy-injector
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    cert-manager.io/inject-ca-from: caddy-system/caddy-injector-tls
webhooks:
- name: mutate.caddy.io
  admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: caddy-injector
      namespace: caddy-system
      path: /mutate-v1-pod
      port: 443
  failurePolicy: Fail
  namespaceSelector:
    matchExpressions:
      - key: kubernetes.io/metadata.name
        operator: NotIn
        values:
          - caddy-system
          - kube-system
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
